cbuffer PerObject : register(b2)
{
	bool hasDistanceField;
}

Texture2D tex : register(t0);
SamplerState texSampler : register(s0);

struct PixelShaderInput {
    float4 color : COLOR;
	float2 uv : TEXCOORD;
};

float median(float r, float g, float b) {
    return max(min(r, g), min(max(r, g), b));
}

float4 main(PixelShaderInput IN)
    : SV_TARGET
{
    float4 texColor;
	if (hasDistanceField){
		float2 msdfUnit = 4.0/float2(512.0, 512.0);
		float4 sample = tex.Sample(texSampler, IN.uv);
		float sigDist = median(sample.r, sample.g, sample.b) - 0.5;
		//sigDist *= dot(msdfUnit, float2(0.5));
		sigDist *= 4.0;
		float opacity = clamp(sigDist + 0.5, 0.0, 1.0);
		texColor = lerp(float4(0,0,0,0), float4(1,1,1,1), opacity);
		if (opacity == 0.0){
			discard;
		}
	} else {
		texColor = tex.Sample(texSampler, IN.uv);		
	}
    return IN.color * texColor;	
}
