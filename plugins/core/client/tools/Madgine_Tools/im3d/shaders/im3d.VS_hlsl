#include "im3d.sl"

cbuffer PerApplication : register(b0)
{
    Im3DPerApplication app;
}

cbuffer PerFrame : register(b1)
{   
    Im3DPerFrame frame;
}

cbuffer PerObject : register(b2)
{
    Im3DPerObject object;
}

struct AppData {
    float3 aPos : POSITION0;
    float aW : POSITION1;
    float2 aPos2 : POSITION2;
    float3 aNormal : NORMAL;
    float4 aColor : COLOR;
    float2 aUV : TEXCOORD;
};

struct VertexShaderOutput {
    float4 position : SV_POSITION;
    float4 color : COLOR;
    float4 worldPos : POSITION;
    float3 normal : NORMAL;
    float2 uv : TEXCOORD0;
};

VertexShaderOutput main(AppData IN)
{
    VertexShaderOutput OUT;

    float2 aPos2 = IN.aPos2;

	OUT.worldPos = mul(object.m, float4(IN.aPos, IN.aW));
    
    OUT.position = mul(app.p, mul(frame.v, OUT.worldPos) + float4(aPos2, 0.0, 0.0));
    OUT.position.z += OUT.position.w;
    OUT.position.z /= 2;
    
    OUT.color = IN.aColor;

	OUT.normal = float4(IN.aNormal, 0);

	OUT.uv = IN.aUV;

    return OUT;
}
