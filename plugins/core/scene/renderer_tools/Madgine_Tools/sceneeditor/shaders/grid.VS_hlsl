cbuffer PerFrame : register( b1 )
{
    matrix vp;
}

struct AppData
{
    float3 aPos : POSITION0; 
    float aW : POSITION1;
};

struct VertexShaderOutput
{
    float4 pos : SV_POSITION;
    float4 worldPos : POSITION;
};

VertexShaderOutput main( AppData IN )
{
    VertexShaderOutput OUT;
    OUT.worldPos = float4(IN.aPos, IN.aW);
    OUT.pos = mul( vp, OUT.worldPos );
    OUT.pos.z += OUT.pos.w;
    OUT.pos.z /= 2;
    return OUT;
}